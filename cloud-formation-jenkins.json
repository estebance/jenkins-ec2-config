{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Jenkins EC2 instance deploy",
  "Parameters" : {
    "JenkinsInstanceType": {
      "Description": "EC2 instance type for  Jenkins Server",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": ["t1.micro", "t2.micro", "t2.small", "t2.medium", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to CodeDeploy EC2 instances and Jenkins Server",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "VpcId": {
      "Description": "The VPC Id where the EC2 instances will be launched.",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "must be the name of an existing VPC."
    },
    "YourIPRange": {
      "Description": "CIDR block of the network from where you will connect to the Jenkins server using HTTP and SSH",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PublicSubnet1": {
      "Description": "The first public subnet where the Jenkins EC2 instance, ELB and CodeDeploy Web Servers will be launched",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "Must be a valid Public VPC Subnet."
    }
  },
  "Mappings": {
      "AWSRegionArch2AMI": {
        "ap-northeast-1"  : {  "AMI" : "ami-08847abae18baa040" },
        "ap-northeast-2"  : { "AMI" : "ami-012566705322e9a8e" },
        "ap-south-1"        : { "AMI" : "ami-00b6a8a2bd28daf19" },
        "ap-southeast-1"  : { "AMI" : "ami-01da99628f381e50a" },
        "ap-southeast-2"    : { "AMI" : "ami-00e17d1165b9dd3ec" },
        "eu-central-1"  : { "AMI" : "ami-076431be05aaf8080" },
        "eu-west-1"  : { "AMI" : "ami-0bdb1d6c15a40392c" },
        "eu-west-2"  : { "AMI" : "ami-e1768386" },
        "eu-west-3"   : { "AMI" : "ami-06340c8c12baa6a09" },
        "sa-east-1"  : { "AMI" : "ami-0ad7b0031d41ed4b9" },
        "us-east-1"  : { "AMI" :  "ami-04681a1dbd79675a5" },
        "us-east-2"   : { "AMI" : "ami-0cf31d971a3ca20d6" },
        "us-west-1"  : { "AMI" : "ami-0782017a917e973e7" },
        "us-west-2"  : { "AMI" : "ami-6cd6f714" }
      }
  },
  "Resources": {
     "JenkinsServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "Comment": "Install Jenkins, nginx and the Jenkins CodeDeploy plugin",
        "AWS::CloudFormation::Init": {
          "configSets": {
            "install_all": [
              "install_base",
              "install_nginx"
            ]},
            "install_base": {
                "packages": {
                    "yum": {
                        "git": []
                    }
                }
            },
            "install_nginx": {
              "packages": {
                "yum": {
                  "nginx": []
                }
              },
              "files": {
                  "/etc/nginx/nginx.conf": {
                      "content": {
                          "Fn::Join": [
                              "",
                              [
                                  "user  nginx;\n",
                                  "worker_processes  1;\n\n",
                                  "error_log  /var/log/nginx/error.log;\n",
                                  "pid        /var/run/nginx.pid;\n\n",
                                  "events {\n",
                                  "    worker_connections  1024;\n",
                                  "}\n\n",
                                  "http {\n",
                                  "    include       /etc/nginx/mime.types;\n",
                                  "    default_type  application/octet-stream;\n",
                                  "    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n",
                                  "                      '$status $body_bytes_sent \"$http_referer\" '\n",
                                  "                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n",
                                  "    access_log  /var/log/nginx/access.log  main;\n",
                                  "    sendfile        on;\n",
                                  "    keepalive_timeout  65;\n",
                                  "    include /etc/nginx/conf.d/*.conf;\n",
                                  "    index   index.html index.htm;\n",
                                  "    server {\n",
                                  "        listen       80;\n",
                                  "        server_name  _;\n",
                                  "        location / {\n",
                                  "          proxy_pass              http://127.0.0.1:8080;\n",
                                  "          proxy_set_header        Host $host;\n",
                                  "          proxy_set_header        X-Real-IP $remote_addr;\n",
                                  "          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n",
                                  "          proxy_connect_timeout   150;\n",
                                  "          proxy_send_timeout      100;\n",
                                  "          proxy_read_timeout      100;\n",
                                  "          proxy_buffers           4 32k;\n",
                                  "          client_max_body_size    8m;\n",
                                  "          client_body_buffer_size 128k;\n",
                                  "        }\n",
                                  "        location /password.txt {\n",
                                  "          alias              /web/initalpass.html;\n",
                                  "        }\n",
                                  "   }\n",
                                  "}\n"
                              ]
                          ]
                      }
                  }
              },
              "mode": "000444",
              "owner": "root",
              "group": "root"
          }
        },
        "services": {
            "sysvinit": {
                "nginx": {
                    "enabled": "true",
                    "ensureRunning": "true",
                    "files": [
                        "/etc/nginx/nginx.conf"
                    ]
                }
            }
        }
      },
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, "AMI"]},
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "JenkinsSecurityGroup" }],
          "SubnetId": { "Ref" : "PublicSubnet1" }
        } ],
        "InstanceType": {
          "Ref": "JenkinsInstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "JenkinsInstanceProfile"
        },
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : "Jenkins Server"
          }
        ]
      }
    },
    "JenkinsSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and HTTP access from specific CIDR block",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": {
            "Ref": "YourIPRange"
          }
        }, {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": {
            "Ref": "YourIPRange"
          }
        },
        {
      "IpProtocol": "tcp",
      "FromPort": "8080",
      "ToPort": "8080",
      "CidrIp": {
          "Ref": "YourIPRange"
      }
      }],
      "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
      }
    },
    "JenkinsRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "Path" : "/",
        "AssumeRolePolicyDocument" : {
          "Statement" : [ {
            "Effect" : "Allow",
            "Principal" : {
              "Service" : [ "ec2.amazonaws.com" ]
            },
            "Action" : [ "sts:AssumeRole" ]
          } ]
        }
      }
    },
    "JenkinsInstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [ {
          "Ref" : "JenkinsRole"
        } ]
      }
    }
  },
  "Outputs" : {
    "JenkinsServerDNSName" : {
      "Description" : "DNS Name of Jenkins Server",
      "Value" : {
        "Fn::GetAtt" : [ "JenkinsServer", "PublicDnsName" ]
      }
    }
  }
}
